version: '3.8'

services:
  # SOPHIA API Backend
  sophia-api:
    build:
      context: ../..
      dockerfile: docker/production/Dockerfile.api
    container_name: sophia-api
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.py
      - GITHUB_PAT=${GITHUB_PAT}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - LAMBDA_API_KEY=${LAMBDA_API_KEY}
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/sophia
    ports:
      - "5000:5000"
    depends_on:
      - redis
      - postgres
    networks:
      - sophia-network
    volumes:
      - api-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # SOPHIA Dashboard Frontend
  sophia-dashboard:
    build:
      context: ../..
      dockerfile: docker/production/Dockerfile.dashboard
    container_name: sophia-dashboard
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - sophia-api
    networks:
      - sophia-network
    volumes:
      - dashboard-logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MCP Code Server
  sophia-mcp:
    build:
      context: ../..
      dockerfile: docker/production/Dockerfile.mcp
    container_name: sophia-mcp
    restart: unless-stopped
    environment:
      - GITHUB_PAT=${GITHUB_PAT}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=8000
    ports:
      - "8000:8000"
    networks:
      - sophia-network
    volumes:
      - mcp-logs:/app/logs
      - mcp-ssh:/app/.ssh
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    container_name: sophia-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - sophia-network
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for persistent data
  postgres:
    image: postgres:15-alpine
    container_name: sophia-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=sophia
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    networks:
      - sophia-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sophia"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: sophia-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    networks:
      - sophia-network
    volumes:
      - qdrant-data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  sophia-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  api-logs:
  dashboard-logs:
  mcp-logs:
  mcp-ssh:
  redis-data:
  postgres-data:
  qdrant-data:

