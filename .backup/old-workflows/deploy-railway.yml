name: Deploy SOPHIA Intel to Railway
on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy Backend API to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          cd backend
          railway login --token $RAILWAY_TOKEN
          railway project create sophia-intel-backend || true
          railway service create sophia-api || true
          railway up --service sophia-api
          
      - name: Get Backend URL
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          cd backend
          railway status --json > ../backend-status.json
          cat ../backend-status.json

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/dashboard/package-lock.json

      - name: Install dependencies
        working-directory: apps/dashboard
        run: npm install --legacy-peer-deps

      - name: Build dashboard
        working-directory: apps/dashboard
        run: npm run build

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy Frontend to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          cd apps/dashboard
          railway login --token $RAILWAY_TOKEN
          railway project create sophia-intel-frontend || true
          railway service create sophia-dashboard || true
          railway up --service sophia-dashboard

      - name: Get Frontend URL
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          cd apps/dashboard
          railway status --json > ../../frontend-status.json
          cat ../../frontend-status.json

  configure-domains:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Custom Domains
        env:
          DNSIMPLE_API_KEY: ${{ secrets.DNSIMPLE_API_KEY }}
          DNSIMPLE_ACCOUNT_ID: ${{ secrets.DNSIMPLE_ACCOUNT_ID }}
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          # Get Railway service URLs
          BACKEND_URL=$(railway status --json --service sophia-api | jq -r '.deployments[0].url' || echo "sophia-api.railway.app")
          FRONTEND_URL=$(railway status --json --service sophia-dashboard | jq -r '.deployments[0].url' || echo "sophia-dashboard.railway.app")
          
          echo "Backend URL: $BACKEND_URL"
          echo "Frontend URL: $FRONTEND_URL"
          
          # Configure DNS records
          curl -X POST \
            -H "Authorization: Bearer $DNSIMPLE_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"name\":\"api\",\"type\":\"CNAME\",\"content\":\"$BACKEND_URL\",\"ttl\":300}" \
            "https://api.dnsimple.com/v2/$DNSIMPLE_ACCOUNT_ID/zones/sophia-intel.ai/records"
          
          curl -X POST \
            -H "Authorization: Bearer $DNSIMPLE_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"name\":\"www\",\"type\":\"CNAME\",\"content\":\"$FRONTEND_URL\",\"ttl\":300}" \
            "https://api.dnsimple.com/v2/$DNSIMPLE_ACCOUNT_ID/zones/sophia-intel.ai/records"

  verify-deployment:
    runs-on: ubuntu-latest
    needs: configure-domains
    steps:
      - name: Wait for DNS propagation
        run: sleep 120

      - name: Verify deployment
        run: |
          echo "Testing api.sophia-intel.ai..."
          curl -f https://api.sophia-intel.ai/health || echo "API not ready yet"
          
          echo "Testing www.sophia-intel.ai..."
          curl -f https://www.sophia-intel.ai || echo "Frontend not ready yet"
          
          echo "âœ… Railway deployment completed!"

