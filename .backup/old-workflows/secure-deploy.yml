name: Secure SOPHIA Intel Deployment
on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Northflank token presence
        run: |
          if [ -z "${{ secrets.NORTHFLANK_API_TOKEN }}" ]; then
            echo "‚ùå Missing NORTHFLANK_API_TOKEN secret"
            exit 1
          else
            echo "‚úÖ NORTHFLANK_API_TOKEN is available"
          fi

      - name: Verify Northflank API access
        env:
          NORTHFLANK_API_TOKEN: ${{ secrets.NORTHFLANK_API_TOKEN }}
        run: |
          set -euo pipefail
          set +x
          AUTH="Authorization: Bearer $NORTHFLANK_API_TOKEN"
          set -x
          
          # Test API access without exposing token
          RESPONSE=$(curl -s -w "%{http_code}" -H "$AUTH" \
            "https://api.northflank.com/v1/projects/sophia-intel" \
            -o /tmp/project_info.json)
          
          if [ "$RESPONSE" = "200" ]; then
            echo "‚úÖ Northflank API access verified"
            echo "Project info:"
            cat /tmp/project_info.json | jq -r '.data | "ID: \(.id), Region: \(.region)"'
          else
            echo "‚ùå API access failed with code: $RESPONSE"
            exit 1
          fi

      - name: Deploy SOPHIA Intel Services
        env:
          NORTHFLANK_API_TOKEN: ${{ secrets.NORTHFLANK_API_TOKEN }}
          PROJECT_ID: sophia-intel
        run: |
          set -euo pipefail
          set +x
          AUTH="Authorization: Bearer $NORTHFLANK_API_TOKEN"
          set -x

          echo "üöÄ Deploying SOPHIA Intel API Service..."
          
          # Deploy API Service (create or update)
          API_RESPONSE=$(curl -s -w "%{http_code}" -X POST \
            -H "$AUTH" -H "Content-Type: application/json" \
            -d '{
              "name": "sophia-api",
              "spec": {
                "type": "combined",
                "vcsData": {
                  "projectUrl": "https://github.com/ai-cherry/sophia-intel",
                  "projectType": "github",
                  "accountLogin": "ai-cherry",
                  "projectName": "sophia-intel",
                  "gitRef": "main"
                },
                "buildSettings": {
                  "dockerfile": {
                    "buildEngine": "kaniko",
                    "dockerFilePath": "/northflank/docker/sophia-api.Dockerfile",
                    "dockerWorkDir": "/"
                  }
                },
                "runtimeEnvironment": {
                  "resources": {
                    "cpu": "0.5 vCPU",
                    "memory": "1024 MB"
                  }
                },
                "networking": {
                  "ports": [
                    {
                      "name": "api",
                      "internalPort": 8000,
                      "public": true,
                      "protocol": "HTTP",
                      "domains": [
                        {
                          "domain": "api.sophia-intel.ai"
                        }
                      ]
                    }
                  ]
                }
              }
            }' \
            "https://api.northflank.com/v1/projects/$PROJECT_ID/services" \
            -o /tmp/api_deploy.json)

          echo "API Service Response Code: $API_RESPONSE"
          
          echo "üöÄ Deploying SOPHIA Intel Dashboard Service..."
          
          # Deploy Dashboard Service (create or update)
          DASH_RESPONSE=$(curl -s -w "%{http_code}" -X POST \
            -H "$AUTH" -H "Content-Type: application/json" \
            -d '{
              "name": "sophia-dashboard",
              "spec": {
                "type": "combined",
                "vcsData": {
                  "projectUrl": "https://github.com/ai-cherry/sophia-intel",
                  "projectType": "github",
                  "accountLogin": "ai-cherry",
                  "projectName": "sophia-intel",
                  "gitRef": "main"
                },
                "buildSettings": {
                  "dockerfile": {
                    "buildEngine": "kaniko",
                    "dockerFilePath": "/northflank/docker/sophia-dashboard.Dockerfile",
                    "dockerWorkDir": "/"
                  }
                },
                "runtimeEnvironment": {
                  "resources": {
                    "cpu": "0.5 vCPU",
                    "memory": "1024 MB"
                  }
                },
                "networking": {
                  "ports": [
                    {
                      "name": "web",
                      "internalPort": 3000,
                      "public": true,
                      "protocol": "HTTP",
                      "domains": [
                        {
                          "domain": "www.sophia-intel.ai"
                        }
                      ]
                    }
                  ]
                }
              }
            }' \
            "https://api.northflank.com/v1/projects/$PROJECT_ID/services" \
            -o /tmp/dash_deploy.json)

          echo "Dashboard Service Response Code: $DASH_RESPONSE"
          
          # Show deployment results (without sensitive data)
          echo "‚úÖ Deployment commands completed"
          echo "API Response: $(cat /tmp/api_deploy.json | jq -r '.message // "Success"')"
          echo "Dashboard Response: $(cat /tmp/dash_deploy.json | jq -r '.message // "Success"')"

      - name: Wait for services to start
        run: |
          echo "‚è≥ Waiting 2 minutes for services to initialize..."
          sleep 120

      - name: Health Checks
        env:
          API_URL: https://api.sophia-intel.ai/health
          DASH_URL: https://www.sophia-intel.ai
        run: |
          set -euo pipefail
          
          echo "üè• Starting health checks..."
          
          for i in {1..12}; do
            echo "Attempt $i/12..."
            
            # Check API health
            API_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$API_URL" || echo "000")
            
            # Check Dashboard
            DASH_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$DASH_URL" || echo "000")
            
            echo "  API: $API_CODE | Dashboard: $DASH_CODE"
            
            if [ "$API_CODE" = "200" ] && [ "$DASH_CODE" = "200" ]; then
              echo "‚úÖ All services healthy!"
              echo "üéâ SOPHIA Intel is live at:"
              echo "   Dashboard: https://www.sophia-intel.ai"
              echo "   API: https://api.sophia-intel.ai"
              exit 0
            fi
            
            if [ $i -lt 12 ]; then
              echo "  Waiting 30 seconds before retry..."
              sleep 30
            fi
          done
          
          echo "‚ùå Services not healthy after 12 attempts"
          echo "Final status - API: $API_CODE | Dashboard: $DASH_CODE"
          exit 1

      - name: Deployment Summary
        if: always()
        run: |
          echo "üìä SOPHIA Intel Deployment Summary"
          echo "=================================="
          echo "Timestamp: $(date -u)"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Commit: ${{ github.sha }}"
          echo ""
          echo "üîó Access URLs:"
          echo "  Dashboard: https://www.sophia-intel.ai"
          echo "  API: https://api.sophia-intel.ai"
          echo ""
          echo "‚ö†Ô∏è  SECURITY REMINDER: Rotate the Northflank API token immediately after verifying deployment!"

