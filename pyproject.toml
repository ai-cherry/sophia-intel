[project]
name = "sophia-intel"
version = "0.1.0"
description = "Sophia Intel - AI Agent Platform"
authors = [
    {name = "Lynn Musil", email = "musillynn@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}

dependencies = [
    # Core async and HTTP
    "aiohttp>=3.8.0",
    "asyncio-throttle>=1.0.0",
    # Database and vector storage
    "qdrant-client>=1.13.0",
    "redis",
    # LLM and AI frameworks
    "langchain-community",
    "langchain-openai",
    "langgraph>=0.2.40",
    "mem0ai",
    # ML and embeddings
    "sentence-transformers",
    # Web framework
    "fastapi",
    "uvicorn",
    # Configuration and utilities
    "pydantic>=2.0.0",
    "pyyaml",
    "python-dotenv",
    # HTTP client
    "httpx>=0.24.0",
    "requests>=2.28.0",
    "loguru>=0.7.3",
]

[project.optional-dependencies]
dev = [
    "black",
    "ruff", 
    "pip-audit",
    "deptry",
    "mypy",
    "vulture",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
]

infra = [
    "cryptography",
    "httpx>=0.24.0",
    "pulumi-command>=1.0.0",
    "pulumi-dnsimple>=0.5.0", 
    "pulumi>=3.0.0",
    "pydantic>=2.0.0",
    "requests>=2.28.0",
]

[tool.uv]
dev-dependencies = [
    "black",
    "ruff",
    "pip-audit", 
    "deptry",
    "mypy",
    "vulture",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]

