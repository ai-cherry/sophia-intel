{{- range $serviceName, $config := .Values.mcpServices }}
{{- if $config.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $config.name }}
  namespace: {{ $.Values.global.namespace }}
  labels:
    app: {{ $config.name }}
    component: mcp-service
    service: {{ $serviceName }}
    version: {{ $config.tag }}
spec:
  replicas: {{ $config.replicas }}
  selector:
    matchLabels:
      app: {{ $config.name }}
  template:
    metadata:
      labels:
        app: {{ $config.name }}
        component: mcp-service
        service: {{ $serviceName }}
        version: {{ $config.tag }}
    spec:
      {{- with $.Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ $config.name }}
        image: "{{ $.Values.global.imageRegistry }}/{{ $config.image }}:{{ $config.tag }}"
        imagePullPolicy: {{ $.Values.global.imagePullPolicy }}
        {{- with $.Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ $config.port }}
          protocol: TCP
        env:
        {{- range $config.env }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        {{- range $.Values.secrets.keys }}
        - name: {{ . | upper | replace "-" "_" }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.secrets.name }}
              key: {{ . }}
        {{- end }}
        {{- if $.Values.monitoring.healthCheck.enabled }}
        livenessProbe:
          httpGet:
            path: {{ $.Values.monitoring.healthCheck.path }}
            port: http
          initialDelaySeconds: {{ $.Values.monitoring.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ $.Values.monitoring.healthCheck.periodSeconds }}
          timeoutSeconds: {{ $.Values.monitoring.healthCheck.timeoutSeconds }}
          failureThreshold: {{ $.Values.monitoring.healthCheck.failureThreshold }}
        {{- end }}
        {{- if $.Values.monitoring.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ $.Values.monitoring.readinessProbe.path }}
            port: http
          initialDelaySeconds: {{ $.Values.monitoring.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ $.Values.monitoring.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ $.Values.monitoring.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ $.Values.monitoring.readinessProbe.failureThreshold }}
        {{- end }}
        resources:
          {{- toYaml $config.resources | nindent 10 }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}

