apiVersion: apps/v1
kind: Deployment
metadata:
  name: sophia-api
  namespace: sophia-mvp
  labels:
    app: sophia-intel
    component: api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: sophia-intel
      component: api
  template:
    metadata:
      labels:
        app: sophia-intel
        component: api
    spec:
      containers:
      - name: sophia-api
        image: sophia-intel/api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: sophia-config
              key: flask-env
        - name: GITHUB_PAT
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: github-pat
        - name: OPENROUTER_API_KEY
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: openrouter-api-key
        - name: LAMBDA_API_KEY
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: lambda-api-key
        - name: FLASK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: flask-secret-key
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: sophia-config
              key: redis-url
        - name: DATABASE_URL
          value: "postgresql://postgres:$(POSTGRES_PASSWORD)@sophia-postgres:5432/sophia"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: postgres-password
        - name: QDRANT_URL
          valueFrom:
            configMapKeyRef:
              name: sophia-config
              key: qdrant-url
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: api-logs
          mountPath: /app/logs
      volumes:
      - name: api-logs
        emptyDir: {}
      restartPolicy: Always

