{
  "name": "Sophia Intel Development Environment",
  "image": "mcr.microsoft.com/devcontainers/universal:2-linux",
  
  "features": {
    "ghcr.io/devcontainers/features/github-cli:1": {
      "installDirectlyFromGitHubRelease": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11",
      "installTools": true,
      "optimize": true
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "18",
      "nodeGypDependencies": true,
      "installYarnUsingApt": true
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "enableNonRootDocker": true,
      "moby": true
    },
    "ghcr.io/devcontainers/features/azure-cli:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/terraform:1": {
      "version": "latest"
    }
  },
  
  "customizations": {
    "vscode": {
      "extensions": [
        "github.copilot",
        "github.copilot-chat",
        "ms-python.python",
        "ms-python.pylint",
        "ms-python.black-formatter",
        "ms-vscode.cpptools",
        "ms-vscode.cmake-tools",
        "ms-vscode.github-issues-prs",
        "github.vscode-github-actions",
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-azuretools.vscode-docker",
        "hashicorp.terraform",
        "ms-vscode.powershell",
        "bradlc.vscode-tailwindcss",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-typescript-next",
        "ms-toolsai.jupyter",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-slideshow"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "zsh",
        "terminal.integrated.profiles.linux": {
          "sophia": {
            "path": "/usr/local/bin/sophia",
            "args": [],
            "icon": "terminal-cmd"
          },
          "zsh": {
            "path": "/bin/zsh",
            "args": ["-l"]
          }
        },
        "python.defaultInterpreterPath": "/usr/local/python/current/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.formatting.provider": "black",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true
        },
        "files.autoSave": "afterDelay",
        "files.autoSaveDelay": 1000,
        "workbench.colorTheme": "GitHub Dark",
        "workbench.iconTheme": "vs-seti",
        "git.autofetch": true,
        "git.enableSmartCommit": true,
        "github.copilot.enable": {
          "*": true,
          "yaml": true,
          "plaintext": true,
          "markdown": true
        }
      }
    }
  },
  
  "containerEnv": {
    "SOPHIA_CLI_VERSION": "3.0.0",
    "SOPHIA_BRANCH": "notion",
    "AI_PROVIDER": "claude",
    "CODESPACE_NAME": "${localEnv:CODESPACE_NAME}",
    "GITHUB_CODESPACES": "true",
    "TERM": "xterm-256color"
  },
  
  "secrets": {
    "CLAUDE_API_KEY": {
      "description": "Claude API Key for AI integration",
      "documentationUrl": "https://console.anthropic.com/"
    },
    "OPENAI_API_KEY": {
      "description": "OpenAI API Key for GPT integration",
      "documentationUrl": "https://platform.openai.com/api-keys"
    },
    "GROK_API_KEY": {
      "description": "Grok xAI API Key",
      "documentationUrl": "https://console.x.ai/"
    },
    "TELEGRAM_BOT_TOKEN": {
      "description": "Telegram Bot Token for bot integration",
      "documentationUrl": "https://core.telegram.org/bots#creating-a-new-bot"
    }
  },
  
  "postCreateCommand": "bash .devcontainer/setup.sh",
  "postStartCommand": "bash .devcontainer/startup.sh",
  
  "forwardPorts": [
    3000,
    5000,
    8000,
    8080,
    9000
  ],
  
  "portsAttributes": {
    "3000": {
      "label": "Frontend Dev Server",
      "onAutoForward": "notify"
    },
    "5000": {
      "label": "Flask Backend",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "Sophia CLI Server",
      "onAutoForward": "silent"
    },
    "8080": {
      "label": "Alternative Web Server",
      "onAutoForward": "silent"
    },
    "9000": {
      "label": "Telegram Bot",
      "onAutoForward": "silent"
    }
  },
  
  "mounts": [
    "source=${localWorkspaceFolder}/.devcontainer/cache,target=/workspace/.cache,type=bind,consistency=cached"
  ],
  
  "remoteUser": "codespace",
  
  "updateContentCommand": "bash .devcontainer/update.sh",
  
  "waitFor": "postCreateCommand",
  
  "shutdownAction": "stopContainer"
}

