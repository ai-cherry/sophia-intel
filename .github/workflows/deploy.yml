name: Deploy SOPHIA V4
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies and lint
        run: |
          pip install -r requirements.txt
          pip install flake8
          flake8 . --max-line-length=120 --exclude=.git,__pycache__,venv
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        run: |
          docker build --no-cache -t registry.fly.io/sophia-intel:${{ github.sha }} .
          
      - name: Set up Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master
        
      - name: Deploy to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl auth docker
          docker push registry.fly.io/sophia-intel:${{ github.sha }}
          flyctl deploy --app sophia-intel --image registry.fly.io/sophia-intel:${{ github.sha }} --region ord --verbose
          
      - name: Scale to 3 machines
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          sleep 10
          flyctl scale count 3 --region ord,yyz,ewr --app sophia-intel
          
      - name: Deploy to Lambda Labs
        env:
          LAMBDA_SSH_KEY: ${{ secrets.LAMBDA_SSH_KEY }}
        run: |
          echo "$LAMBDA_SSH_KEY" > key.pem
          chmod 600 key.pem
          
          # Sync ML task to both Lambda servers
          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" ml_task.py ubuntu@192.222.51.223:/home/ubuntu/
          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" ml_task.py ubuntu@192.222.50.242:/home/ubuntu/
          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" requirements.txt ubuntu@192.222.51.223:/home/ubuntu/
          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" requirements.txt ubuntu@192.222.50.242:/home/ubuntu/
          
          # Install dependencies and restart services
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@192.222.51.223 "pip install -r requirements.txt; pkill -f uvicorn; nohup python3 -m uvicorn ml_task:app --host 0.0.0.0 --port 8000 > ml_task.log 2>&1 &"
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@192.222.50.242 "pip install -r requirements.txt; pkill -f uvicorn; nohup python3 -m uvicorn ml_task:app --host 0.0.0.0 --port 8000 > ml_task.log 2>&1 &"
          
          # Wait for services to start
          sleep 15
          
      - name: Test deployment
        run: |
          # Test main SOPHIA service
          curl -f https://sophia-intel.fly.dev/health || exit 1
          curl -f https://sophia-intel.fly.dev/v4/ || echo "V4 interface loading..."
          
          # Test Lambda services
          curl -f http://192.222.51.223:8000/health || echo "Lambda 1 not ready"
          curl -f http://192.222.50.242:8000/health || echo "Lambda 2 not ready"
          
          # Test chat endpoint
          curl -X POST https://sophia-intel.fly.dev/api/v1/chat \
            -H "Content-Type: application/json" \
            -d '{"message": "test deployment"}' || exit 1
            
      - name: Notify success
        if: success()
        run: |
          echo "🎉 SOPHIA V4 deployment successful!"
          echo "🌐 Main service: https://sophia-intel.fly.dev/v4/"
          echo "🔧 Health check: https://sophia-intel.fly.dev/health"
          echo "🤖 Lambda 1: http://192.222.51.223:8000/health"
          echo "🤖 Lambda 2: http://192.222.50.242:8000/health"
