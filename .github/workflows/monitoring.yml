name: üè• SOPHIA Intel Monitoring & Health Checks

on:
  schedule:
    # Run health checks every 15 minutes
    - cron: '*/15 * * * *'
  workflow_dispatch:
    inputs:
      check_type:
        description: 'Type of health check'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - frontend
          - backend
          - infrastructure
          - performance

jobs:
  # Frontend Health Monitoring
  frontend-health:
    name: üé® Frontend Health Check
    runs-on: ubuntu-latest
    if: github.event.inputs.check_type == 'frontend' || github.event.inputs.check_type == 'all' || github.event_name == 'schedule'
    steps:
      - name: Check frontend availability
        id: frontend-check
        run: |
          echo "Checking SOPHIA Intel Dashboard..."
          
          # Primary domain check
          if curl -f -s --max-time 30 https://www.sophia-intel.ai > /dev/null; then
            echo "‚úÖ Primary domain (www.sophia-intel.ai) is healthy"
            echo "primary_healthy=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Primary domain (www.sophia-intel.ai) is down"
            echo "primary_healthy=false" >> $GITHUB_OUTPUT
          fi
          
          # Check dashboard domain
          if curl -f -s --max-time 30 https://dashboard.sophia-intel.ai > /dev/null; then
            echo "‚úÖ Dashboard domain (dashboard.sophia-intel.ai) is healthy"
            echo "dashboard_healthy=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Dashboard domain (dashboard.sophia-intel.ai) is down"
            echo "dashboard_healthy=false" >> $GITHUB_OUTPUT
          fi

      - name: Frontend performance check
        run: |
          echo "Checking frontend performance..."
          response_time=$(curl -o /dev/null -s -w '%{time_total}' https://www.sophia-intel.ai || echo "0")
          echo "Response time: ${response_time}s"
          
          if (( $(echo "$response_time > 5.0" | bc -l) )); then
            echo "‚ö†Ô∏è Frontend response time is slow: ${response_time}s"
          else
            echo "‚úÖ Frontend response time is good: ${response_time}s"
          fi

  # Backend Health Monitoring
  backend-health:
    name: üîß Backend Health Check
    runs-on: ubuntu-latest
    if: github.event.inputs.check_type == 'backend' || github.event.inputs.check_type == 'all' || github.event_name == 'schedule'
    steps:
      - name: Check backend API health
        id: backend-check
        run: |
          echo "Checking SOPHIA Intel API..."
          
          # Primary API domain check
          if curl -f -s --max-time 30 https://api.sophia-intel.ai/health > /dev/null; then
            echo "‚úÖ Primary API (api.sophia-intel.ai) is healthy"
            echo "primary_api_healthy=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Primary API (api.sophia-intel.ai) is down or not configured"
            echo "primary_api_healthy=false" >> $GITHUB_OUTPUT
          fi

      - name: API functionality check
        if: steps.backend-check.outputs.primary_api_healthy == 'true'
        run: |
          echo "Testing API endpoints..."
          
          # Health endpoint
          health_response=$(curl -s https://api.sophia-intel.ai/health)
          echo "Health response: $health_response"
          
          # Models endpoint
          if curl -f -s --max-time 30 https://api.sophia-intel.ai/models > /dev/null; then
            echo "‚úÖ Models endpoint is accessible"
          else
            echo "‚ö†Ô∏è Models endpoint may not be available"
          fi

  # Infrastructure Health Monitoring
  infrastructure-health:
    name: üèóÔ∏è Infrastructure Health Check
    runs-on: ubuntu-latest
    if: github.event.inputs.check_type == 'infrastructure' || github.event.inputs.check_type == 'all' || github.event_name == 'schedule'
    steps:
      - name: Check Railway services
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          echo "Checking Railway infrastructure..."
          
          # Install Railway CLI
          npm install -g @railway/cli
          
          # Check service status
          railway login --token $RAILWAY_TOKEN
          railway status || echo "Railway status check completed"

      - name: Check DNS configuration
        run: |
          echo "Checking DNS configuration..."
          
          # Check DNS resolution
          nslookup www.sophia-intel.ai || echo "DNS check for www.sophia-intel.ai"
          nslookup api.sophia-intel.ai || echo "DNS check for api.sophia-intel.ai"

  # Performance Monitoring
  performance-monitoring:
    name: üìä Performance Monitoring
    runs-on: ubuntu-latest
    if: github.event.inputs.check_type == 'performance' || github.event.inputs.check_type == 'all' || github.event_name == 'schedule'
    steps:
      - name: Frontend performance metrics
        run: |
          echo "Collecting frontend performance metrics..."
          
          # Measure load time
          start_time=$(date +%s.%N)
          curl -s https://www.sophia-intel.ai > /dev/null
          end_time=$(date +%s.%N)
          load_time=$(echo "$end_time - $start_time" | bc)
          
          echo "Frontend load time: ${load_time}s"
          
          # Check if load time is acceptable (< 3 seconds)
          if (( $(echo "$load_time > 3.0" | bc -l) )); then
            echo "‚ö†Ô∏è Frontend load time is slow: ${load_time}s"
          else
            echo "‚úÖ Frontend load time is acceptable: ${load_time}s"
          fi

      - name: Backend performance metrics
        run: |
          echo "Collecting backend performance metrics..."
          
          # Test API response time if available
          if curl -f -s --max-time 5 https://api.sophia-intel.ai/health > /dev/null 2>&1; then
            api_response_time=$(curl -o /dev/null -s -w '%{time_total}' https://api.sophia-intel.ai/health)
            echo "API response time: ${api_response_time}s"
            
            if (( $(echo "$api_response_time > 2.0" | bc -l) )); then
              echo "‚ö†Ô∏è API response time is slow: ${api_response_time}s"
            else
              echo "‚úÖ API response time is good: ${api_response_time}s"
            fi
          else
            echo "‚ÑπÔ∏è API not available for performance testing"
          fi

  # Alert and Notification
  alert-on-failure:
    name: üö® Alert on Failure
    runs-on: ubuntu-latest
    needs: [frontend-health, backend-health, infrastructure-health, performance-monitoring]
    if: failure()
    steps:
      - name: Generate failure report
        run: |
          echo "üö® SOPHIA Intel Health Check Failure Report"
          echo "==========================================="
          echo ""
          echo "Timestamp: $(date)"
          echo "Frontend Health: ${{ needs.frontend-health.result }}"
          echo "Backend Health: ${{ needs.backend-health.result }}"
          echo "Infrastructure Health: ${{ needs.infrastructure-health.result }}"
          echo "Performance Monitoring: ${{ needs.performance-monitoring.result }}"
          echo ""
          echo "Action Required: Check failed services and investigate issues"

      - name: Create issue on failure
        if: github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            const title = `üö® SOPHIA Intel Health Check Failure - ${new Date().toISOString()}`;
            const body = `
            ## Health Check Failure Report
            
            **Timestamp:** ${new Date().toISOString()}
            
            **Failed Services:**
            - Frontend Health: ${{ needs.frontend-health.result }}
            - Backend Health: ${{ needs.backend-health.result }}
            - Infrastructure Health: ${{ needs.infrastructure-health.result }}
            - Performance Monitoring: ${{ needs.performance-monitoring.result }}
            
            **Action Required:**
            1. Check service logs
            2. Verify infrastructure status
            3. Test manual deployment if needed
            4. Update monitoring if false positive
            
            **Auto-generated by monitoring workflow**
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'monitoring', 'urgent']
            });

  # Success Summary
  monitoring-summary:
    name: ‚úÖ Monitoring Summary
    runs-on: ubuntu-latest
    needs: [frontend-health, backend-health, infrastructure-health, performance-monitoring]
    if: success()
    steps:
      - name: Generate success report
        run: |
          echo "‚úÖ SOPHIA Intel Health Check Success Report"
          echo "==========================================="
          echo ""
          echo "Timestamp: $(date)"
          echo "All systems operational:"
          echo "- Frontend Health: ‚úÖ Healthy"
          echo "- Backend Health: ‚úÖ Healthy"
          echo "- Infrastructure Health: ‚úÖ Healthy"
          echo "- Performance: ‚úÖ Good"
          echo ""
          echo "üéâ SOPHIA Intel is running smoothly!"

