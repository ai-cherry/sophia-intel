name: Deploy SOPHIA Intel to Production
on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  deploy-dashboard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/dashboard/package-lock.json

      - name: Install dependencies
        working-directory: apps/dashboard
        run: npm install --legacy-peer-deps

      - name: Build dashboard
        working-directory: apps/dashboard
        run: npm run build

      - name: Deploy to Vercel
        uses: vercel/action@v1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: apps/dashboard
          vercel-args: '--prod'

  deploy-api:
    runs-on: ubuntu-latest
    needs: deploy-dashboard
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy API to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          npm install -g @railway/cli
          cd backend
          railway login --token $RAILWAY_TOKEN
          railway up --service sophia-api

  configure-dns:
    runs-on: ubuntu-latest
    needs: [deploy-dashboard, deploy-api]
    steps:
      - name: Configure DNS with DNSimple
        env:
          DNSIMPLE_API_KEY: ${{ secrets.DNSIMPLE_API_KEY }}
          DNSIMPLE_ACCOUNT_ID: ${{ secrets.DNSIMPLE_ACCOUNT_ID }}
        run: |
          # Get Vercel deployment URL
          VERCEL_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
            "https://api.vercel.com/v9/projects/${{ secrets.VERCEL_PROJECT_ID }}/deployments?limit=1" | \
            jq -r '.deployments[0].url')
          
          # Update DNS records
          curl -X POST \
            -H "Authorization: Bearer $DNSIMPLE_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"name\":\"www\",\"type\":\"CNAME\",\"content\":\"$VERCEL_URL\",\"ttl\":300}" \
            "https://api.dnsimple.com/v2/$DNSIMPLE_ACCOUNT_ID/zones/sophia-intel.ai/records"
          
          curl -X POST \
            -H "Authorization: Bearer $DNSIMPLE_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"name\":\"api\",\"type\":\"CNAME\",\"content\":\"sophia-api.railway.app\",\"ttl\":300}" \
            "https://api.dnsimple.com/v2/$DNSIMPLE_ACCOUNT_ID/zones/sophia-intel.ai/records"

  verify-deployment:
    runs-on: ubuntu-latest
    needs: configure-dns
    steps:
      - name: Wait for DNS propagation
        run: sleep 60

      - name: Verify deployment
        run: |
          echo "Testing www.sophia-intel.ai..."
          curl -f https://www.sophia-intel.ai || exit 1
          
          echo "Testing api.sophia-intel.ai..."
          curl -f https://api.sophia-intel.ai/health || exit 1
          
          echo "âœ… SOPHIA Intel is live at production domains!"

