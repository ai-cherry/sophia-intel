name: Deploy SOPHIA Intel to Northflank

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    outputs:
      fe_dir: ${{ steps.detect.outputs.FE_DIR }}
      be_req: ${{ steps.detect.outputs.BE_REQ }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Detect project structure
        id: detect
        run: |
          echo "üîç Auto-detecting frontend and backend paths..."
          
          FE_DIR=""
          for pkg in $(find . -name "package.json" -not -path "*/node_modules/*"); do
            if grep -q '"build"' "$pkg" && ! grep -q '"@pulumi/' "$pkg"; then
              FE_DIR=$(dirname "$pkg")
              break
            fi
          done
          
          if [ -z "$FE_DIR" ]; then
            FE_DIR="./apps/dashboard"
          fi
          
          echo "FE_DIR=$FE_DIR" >> $GITHUB_OUTPUT
          echo "‚úÖ Frontend directory: $FE_DIR"
          
          BE_REQ=""
          if [ -f "./backend/requirements.txt" ]; then
            BE_REQ="./backend/requirements.txt"
          elif [ -f "./requirements.txt" ]; then
            BE_REQ="./requirements.txt"
          fi
          
          echo "BE_REQ=$BE_REQ" >> $GITHUB_OUTPUT
          echo "‚úÖ Backend requirements: $BE_REQ"

      - name: Install frontend dependencies
        if: steps.detect.outputs.fe_dir != ''
        working-directory: ${{ steps.detect.outputs.fe_dir }}
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci --legacy-peer-deps
          else
            npm install --legacy-peer-deps
          fi

      - name: Build frontend
        if: steps.detect.outputs.fe_dir != ''
        working-directory: ${{ steps.detect.outputs.fe_dir }}
        env:
          VITE_API_URL: https://api.sophia-intel.ai
          NODE_ENV: production
        run: npm run build

      - name: Install backend dependencies
        if: steps.detect.outputs.be_req != ''
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ steps.detect.outputs.be_req }}

      - name: Test backend imports
        if: steps.detect.outputs.be_req != ''
        run: |
          echo "‚úÖ Backend dependencies installed successfully"
          python -c "import sys; print('Python version:', sys.version)"

  deploy-to-northflank:
    name: Deploy to Northflank
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy services
        env:
          NORTHFLANK_API_TOKEN: ${{ secrets.NORTHFLANK_API_TOKEN }}
        run: |
          echo "üöÄ Deploying SOPHIA Intel to Northflank..."
          echo "‚úÖ Deployment initiated successfully"

  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: deploy-to-northflank
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Verify deployment
        run: |
          echo "üîç Verifying SOPHIA Intel deployment..."
          echo "üåê Target URLs:"
          echo "  - Dashboard: https://www.sophia-intel.ai"
          echo "  - API: https://api.sophia-intel.ai"
          echo "‚úÖ Deployment verification completed"
