name: SOPHIA Intel CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 mypy bandit
          
      - name: Run linting
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
      - name: Run security scan
        run: bandit -r . -f json -o bandit-report.json || true
        
      - name: Run type checking
        run: mypy . --ignore-missing-imports || true
        
      - name: Run tests
        run: pytest tests/ -v --tb=short || true

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: [dashboard-backend, api-gateway, mcp-servers]
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Pulumi CLI
        uses: pulumi/actions@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Pulumi dependencies
        run: |
          cd infrastructure/pulumi
          pip install -r requirements.txt
          
      - name: Configure Pulumi secrets
        run: |
          cd infrastructure/pulumi
          pulumi config set --secret lambda_api_key "${{ secrets.LAMBDA_API_KEY }}"
          pulumi config set --secret openrouter_api_key "${{ secrets.OPENROUTER_API_KEY }}"
          pulumi config set --secret github_pat "${{ secrets.GITHUB_PAT }}"
          pulumi config set --secret dnsimple_api_key "${{ secrets.DNSIMPLE_API_KEY }}"
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          
      - name: Deploy infrastructure
        uses: pulumi/actions@v4
        with:
          command: up
          stack-name: production
          work-dir: infrastructure/pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          
      - name: Run health checks
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 60
          curl -f https://sophia-intel.ai/health || exit 1
          curl -f https://api.sophia-intel.ai/health || exit 1
          curl -f https://dashboard.sophia-intel.ai/health || exit 1
          echo "âœ… All health checks passed!"
