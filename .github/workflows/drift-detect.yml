name: Infra Drift Detect (Pulumi)

on:
  schedule:
    - cron: "15 7 * * *"   # daily 07:15 UTC
  workflow_dispatch: {}

permissions:
  contents: read
  issues: write
  id-token: write

concurrency:
  group: infra-drift-detect
  cancel-in-progress: false

jobs:
  drift:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Preflight env checks
        run: |
          if [ -z "${{ secrets.LAMBDA_CLOUD_API_KEY }}" ]; then
            echo "::error::Missing LAMBDA_CLOUD_API_KEY; cannot check drift."
            exit 1
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Pulumi
        uses: pulumi/actions@v5
        with:
          pulumi-version: 3.x

      - name: Pulumi login (local backend when no Pulumi Cloud token)
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          if [[ -z "${PULUMI_ACCESS_TOKEN:-}" ]]; then
            pulumi login --cloud-url file://$HOME/.pulumi-local
          fi

      - name: Install infra deps
        working-directory: infra
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Select/init stack
        working-directory: infra
        run: |
          pulumi stack select dev || pulumi stack init dev

      - name: Pulumi refresh
        working-directory: infra
        env:
          LAMBDA_CLOUD_API_KEY: ${{ secrets.LAMBDA_CLOUD_API_KEY }}
        run: pulumi refresh --yes

      - name: Pulumi preview (detect drift)
        id: prev
        working-directory: infra
        env:
          LAMBDA_CLOUD_API_KEY: ${{ secrets.LAMBDA_CLOUD_API_KEY }}
        run: |
          pulumi preview --non-interactive --diff | tee ../drift.txt
          echo "out=$GITHUB_WORKSPACE/drift.txt" >> $GITHUB_OUTPUT

      - name: Upload drift artifact
        uses: actions/upload-artifact@v4
        with:
          name: pulumi-drift
          path: drift.txt

      - name: Open/update drift issue if changes detected
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('${{ steps.prev.outputs.out }}','utf8');
            const changed = !/no changes|no updates required/i.test(body);
            if (!changed) {
              core.info("No drift detected.");
              return;
            }
            const title = "Infra drift detected on dev stack";
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'infra:drift'
            });
            const existing = issues.find(i => i.title === title);
            const snippet = body.length > 60000 ? body.slice(0,60000) + "\n\n[truncated]" : body;
            if (existing) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existing.number,
                body: "New drift run:\n````txt\n" + snippet + "\n````"
              });
            } else {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body: "Pulumi reported drift:\n````txt\n" + snippet + "\n````",
                labels: ['infra:drift']
              });
            }
