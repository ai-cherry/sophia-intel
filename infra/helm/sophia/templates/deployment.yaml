apiVersion: apps/v1
kind: Deployment
metadata:
  name: sophia-api
  namespace: {{ .Values.global.namespace }}
  labels:
    app: sophia-api
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: sophia-api
  template:
    metadata:
      labels:
        app: sophia-api
    spec:
      containers:
      - name: api
        image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.api.service.targetPort }}
        env:
        {{- range $key, $value := .Values.api.env }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
        - name: OPENROUTER_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: OPENROUTER_API_KEY
        - name: QDRANT_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: QDRANT_API_KEY
        - name: BRIGHTDATA_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: BRIGHTDATA_API_KEY
        - name: GITHUB_PAT
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: GITHUB_PAT
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: POSTGRES_URL
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: OPENAI_API_KEY
        - name: ELEVENLABS_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: ELEVENLABS_API_KEY
        resources:
          {{- toYaml .Values.api.resources | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.api.service.targetPort }}
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.api.service.targetPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sophia-interface
  namespace: {{ .Values.global.namespace }}
  labels:
    app: sophia-interface
spec:
  replicas: {{ .Values.interface.replicas }}
  selector:
    matchLabels:
      app: sophia-interface
  template:
    metadata:
      labels:
        app: sophia-interface
    spec:
      containers:
      - name: interface
        image: "{{ .Values.interface.image.repository }}:{{ .Values.interface.image.tag }}"
        imagePullPolicy: {{ .Values.interface.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.interface.service.targetPort }}
        env:
        - name: VITE_API_BASE
          value: "http://{{ .Values.global.ingressHost }}"
        resources:
          {{- toYaml .Values.interface.resources | nindent 10 }}
