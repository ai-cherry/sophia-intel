version: "3.8"

services:
  # MinIO Object Storage
  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin123}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_BROWSER_REDIRECT_URL:-http://localhost:9001}
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - minio_network
      - airbyte_internal

  # MinIO Client for bucket initialization
  minio-init:
    image: quay.io/minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin123}
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...';
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};
      echo 'Creating buckets...';
      /usr/bin/mc mb myminio/airbyte-logs --ignore-existing;
      /usr/bin/mc mb myminio/airbyte-state --ignore-existing;
      /usr/bin/mc mb myminio/airbyte-raw --ignore-existing;
      /usr/bin/mc mb myminio/sophia-data --ignore-existing;
      echo 'Setting bucket policies...';
      /usr/bin/mc anonymous set public myminio/airbyte-logs;
      /usr/bin/mc anonymous set public myminio/airbyte-state;
      /usr/bin/mc anonymous set public myminio/airbyte-raw;
      /usr/bin/mc anonymous set public myminio/sophia-data;
      echo 'Bucket initialization complete';
      exit 0;
      "
    networks:
      - minio_network
      - airbyte_internal

volumes:
  minio_data:
    name: minio_data

networks:
  minio_network:
    name: minio_network
  airbyte_internal:
    external: true

