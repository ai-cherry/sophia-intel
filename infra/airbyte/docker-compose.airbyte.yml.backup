version: "3.8"

services:
  # Airbyte Web Application
  airbyte-webapp:
    image: airbyte/webapp:0.63.15
    ports:
      - "8000:8000"
    environment:
      - AIRBYTE_ROLE=${AIRBYTE_ROLE:-dev}
      - AIRBYTE_VERSION=0.63.15
      - API_URL=${AIRBYTE_API_URL:-http://airbyte-server:8001/api/v1/}
      - CONNECTOR_BUILDER_API_URL=${AIRBYTE_CONNECTOR_BUILDER_API_URL:-http://airbyte-connector-builder-server:80/}
      - INTERNAL_API_HOST=${INTERNAL_API_HOST:-airbyte-server:8001}
    depends_on:
      airbyte-server:
        condition: service_healthy
    networks:
      - airbyte_internal

  # Airbyte Server
  airbyte-server:
    image: airbyte/server:0.63.15
    ports:
      - "8001:8001"
    environment:
      - AIRBYTE_ROLE=${AIRBYTE_ROLE:-dev}
      - AIRBYTE_VERSION=0.63.15
      - CONFIG_ROOT=/data
      - DATABASE_PASSWORD=docker
      - DATABASE_URL=jdbc:postgresql://airbyte-db:5432/airbyte
      - DATABASE_USER=docker
      - JOB_MAIN_CONTAINER_CPU_LIMIT=${JOB_MAIN_CONTAINER_CPU_LIMIT}
      - JOB_MAIN_CONTAINER_CPU_REQUEST=${JOB_MAIN_CONTAINER_CPU_REQUEST}
      - JOB_MAIN_CONTAINER_MEMORY_LIMIT=${JOB_MAIN_CONTAINER_MEMORY_LIMIT}
      - JOB_MAIN_CONTAINER_MEMORY_REQUEST=${JOB_MAIN_CONTAINER_MEMORY_REQUEST}
      - JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION=${JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SECRET_PERSISTENCE=${SECRET_PERSISTENCE:-TESTING_CONFIG_DB_TABLE}
      - TEMPORAL_HOST=${TEMPORAL_HOST:-airbyte-temporal:7233}
      - TRACKING_STRATEGY=${TRACKING_STRATEGY:-logging}
      - WEBAPP_URL=${WEBAPP_URL:-http://localhost:8000/}
      - WORKER_ENVIRONMENT=${WORKER_ENVIRONMENT:-docker}
      - WORKSPACE_ROOT=/tmp/workspace
      - WORKSPACE_DOCKER_MOUNT=airbyte_workspace
      - LOCAL_ROOT=/tmp/airbyte_local
      - LOCAL_DOCKER_MOUNT=/tmp/airbyte_local
      - CONFIG_DATABASE_PASSWORD=${CONFIG_DATABASE_PASSWORD:-docker}
      - CONFIG_DATABASE_URL=${CONFIG_DATABASE_URL:-jdbc:postgresql://airbyte-db:5432/airbyte}
      - CONFIG_DATABASE_USER=${CONFIG_DATABASE_USER:-docker}
      # MinIO Configuration
      - S3_LOG_BUCKET=${AIRBYTE_LOGS_MINIO_BUCKET:-airbyte-logs}
      - S3_LOG_BUCKET_REGION=${AIRBYTE_LOGS_MINIO_REGION:-us-east-1}
      - S3_MINIO_ENDPOINT=${MINIO_ENDPOINT:-http://minio:9000}
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY}
      - S3_PATH_STYLE_ACCESS=true
    volumes:
      - workspace:/tmp/workspace
      - data:/data
      - local_root:/tmp/airbyte_local
    depends_on:
      airbyte-db:
        condition: service_healthy
      airbyte-temporal:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - airbyte_internal

  # Airbyte Worker
  airbyte-worker:
    image: airbyte/worker:0.63.15
    environment:
      - AIRBYTE_ROLE=${AIRBYTE_ROLE:-dev}
      - AIRBYTE_VERSION=0.63.15
      - AUTO_DETECT_SCHEMA=${AUTO_DETECT_SCHEMA:-true}
      - CONFIG_ROOT=/data
      - DATABASE_PASSWORD=docker
      - DATABASE_URL=jdbc:postgresql://airbyte-db:5432/airbyte
      - DATABASE_USER=docker
      - DEPLOYMENT_MODE=${DEPLOYMENT_MODE:-OSS}
      - JOB_MAIN_CONTAINER_CPU_LIMIT=${JOB_MAIN_CONTAINER_CPU_LIMIT}
      - JOB_MAIN_CONTAINER_CPU_REQUEST=${JOB_MAIN_CONTAINER_CPU_REQUEST}
      - JOB_MAIN_CONTAINER_MEMORY_LIMIT=${JOB_MAIN_CONTAINER_MEMORY_LIMIT}
      - JOB_MAIN_CONTAINER_MEMORY_REQUEST=${JOB_MAIN_CONTAINER_MEMORY_REQUEST}
      - JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION=${JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION:-}
      - LOCAL_DOCKER_MOUNT=/tmp/airbyte_local
      - LOCAL_ROOT=/tmp/airbyte_local
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SECRET_PERSISTENCE=${SECRET_PERSISTENCE:-TESTING_CONFIG_DB_TABLE}
      - TEMPORAL_HOST=${TEMPORAL_HOST:-airbyte-temporal:7233}
      - TRACKING_STRATEGY=${TRACKING_STRATEGY:-logging}
      - WEBAPP_URL=${WEBAPP_URL:-http://localhost:8000/}
      - WORKER_ENVIRONMENT=${WORKER_ENVIRONMENT:-docker}
      - WORKSPACE_DOCKER_MOUNT=airbyte_workspace
      - WORKSPACE_ROOT=/tmp/workspace
      - CONFIG_DATABASE_PASSWORD=${CONFIG_DATABASE_PASSWORD:-docker}
      - CONFIG_DATABASE_URL=${CONFIG_DATABASE_URL:-jdbc:postgresql://airbyte-db:5432/airbyte}
      - CONFIG_DATABASE_USER=${CONFIG_DATABASE_USER:-docker}
      # MinIO Configuration
      - S3_LOG_BUCKET=${AIRBYTE_LOGS_MINIO_BUCKET:-airbyte-logs}
      - S3_LOG_BUCKET_REGION=${AIRBYTE_LOGS_MINIO_REGION:-us-east-1}
      - S3_MINIO_ENDPOINT=${MINIO_ENDPOINT:-http://minio:9000}
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY}
      - S3_PATH_STYLE_ACCESS=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - workspace:/tmp/workspace
      - local_root:/tmp/airbyte_local
    depends_on:
      airbyte-db:
        condition: service_healthy
      airbyte-temporal:
        condition: service_healthy
    networks:
      - airbyte_internal

  # Airbyte Database
  airbyte-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=airbyte
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker -d airbyte"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - airbyte_internal

  # Temporal Service
  airbyte-temporal:
    image: temporalio/auto-setup:1.24.2
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=docker
      - POSTGRES_PWD=docker
      - POSTGRES_SEEDS=airbyte-db
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    volumes:
      - ./temporal:/etc/temporal/config/dynamicconfig
    depends_on:
      airbyte-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "tctl", "--address", "localhost:7233", "cluster", "health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - airbyte_internal

  # Connector Builder Server
  airbyte-connector-builder-server:
    image: airbyte/connector-builder-server:0.63.15
    environment:
      - AIRBYTE_ROLE=${AIRBYTE_ROLE:-dev}
      - AIRBYTE_VERSION=0.63.15
    networks:
      - airbyte_internal

volumes:
  workspace:
    name: airbyte_workspace
  data:
    name: airbyte_data
  db:
    name: airbyte_db
  local_root:
    name: airbyte_local

networks:
  airbyte_internal:
    external: true

