{
  "validation_summary": {
    "start_time": "2025-08-15T19:16:46.624113",
    "end_time": "2025-08-15T19:16:46.682984",
    "duration_seconds": 0.058871,
    "total_tests": 62,
    "passed_tests": 53,
    "failed_tests": 9,
    "success_rate": 85.48387096774194
  },
  "categories": {
    "infrastructure_files": {
      "passed": 6,
      "failed": 0,
      "messages": [
        "\u2705 k8s/manifests/namespace.yaml exists",
        "\u2705 k8s/manifests/deployments/api-deployment.yaml exists",
        "\u2705 k8s/manifests/ingress/kong-ingress.yaml exists",
        "\u2705 scripts/deploy_cpu_cluster.sh exists",
        "\u2705 mcp_servers/ai_router.py exists",
        "\u2705 agents/swarm/swarm_orchestrator.py exists"
      ]
    },
    "k8s_structure": {
      "passed": 3,
      "failed": 0,
      "messages": [
        "\u2705 deployments directory exists",
        "\u2705 ingress directory exists",
        "\u2705 certificates directory exists"
      ]
    },
    "yaml_syntax": {
      "passed": 13,
      "failed": 0,
      "messages": [
        "\u2705 namespace.yaml valid",
        "\u2705 hpa.yaml valid",
        "\u2705 sophia-api.yaml valid",
        "\u2705 sophia-dashboard.yaml valid",
        "\u2705 sophia-mcp.yaml valid",
        "\u2705 api-deployment.yaml valid",
        "\u2705 dashboard-deployment.yaml valid",
        "\u2705 mcp-servers-deployment.yaml valid",
        "\u2705 sophia-ingress.yaml valid",
        "\u2705 kong-ingress.yaml valid",
        "\u2705 sophia-namespace.yaml valid",
        "\u2705 sophia-services.yaml valid",
        "\u2705 letsencrypt-issuer.yaml valid"
      ]
    },
    "deployment_script": {
      "passed": 1,
      "failed": 0,
      "messages": [
        "\u2705 Deployment script is executable"
      ]
    },
    "script_functions": {
      "passed": 5,
      "failed": 0,
      "messages": [
        "\u2705 check_prerequisites function present",
        "\u2705 provision_cpu_instances function present",
        "\u2705 install_k3s_cluster function present",
        "\u2705 deploy_applications function present",
        "\u2705 configure_dns function present"
      ]
    },
    "ai_router_file": {
      "passed": 1,
      "failed": 0,
      "messages": [
        "\u2705 AI router file exists"
      ]
    },
    "ai_router_components": {
      "passed": 5,
      "failed": 0,
      "messages": [
        "\u2705 class AIRouter found",
        "\u2705 claude-sonnet-4 found",
        "\u2705 route_request found",
        "\u2705 execute_task found",
        "\u2705 openrouter found"
      ]
    },
    "ai_router_endpoint": {
      "passed": 0,
      "failed": 1,
      "messages": [
        "\u274c AI router endpoint error: Cannot connect to host localhost:5000 ssl:default [Multiple exceptions: [Errno 111] Connect call failed ('::1', 5000, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 5000)]"
      ]
    },
    "agent_files": {
      "passed": 5,
      "failed": 0,
      "messages": [
        "\u2705 base_agent.py exists",
        "\u2705 planner_agent.py exists",
        "\u2705 coder_agent.py exists",
        "\u2705 swarm_orchestrator.py exists",
        "\u2705 swarm_api.py exists"
      ]
    },
    "base_agent": {
      "passed": 5,
      "failed": 0,
      "messages": [
        "\u2705 class BaseAgent implemented",
        "\u2705 async def execute_task implemented",
        "\u2705 async def communicate_with_ai implemented",
        "\u2705 AgentCapability implemented",
        "\u2705 AgentTask implemented"
      ]
    },
    "orchestrator": {
      "passed": 4,
      "failed": 0,
      "messages": [
        "\u2705 class SwarmOrchestrator implemented",
        "\u2705 async def start_mission implemented",
        "\u2705 class Mission implemented",
        "\u2705 MissionStatus implemented"
      ]
    },
    "swarm_api": {
      "passed": 0,
      "failed": 1,
      "messages": [
        "\u274c Agent swarm API error: Cannot connect to host localhost:5001 ssl:default [Multiple exceptions: [Errno 111] Connect call failed ('::1', 5001, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 5001)]"
      ]
    },
    "endpoint_health": {
      "passed": 0,
      "failed": 4,
      "messages": [
        "\u26a0\ufe0f  AI Router Health error: Cannot connect to host localhost:5000 ssl:default [Multiple exceptions: [Errno 111] Connect call failed ('::1', 5000, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 5000)]",
        "\u26a0\ufe0f  Agent Swarm Health error: Cannot connect to host localhost:5001 ssl:default [Multiple exceptions: [Errno 111] Connect call failed ('::1', 5001, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 5001)]",
        "\u26a0\ufe0f  Dashboard Health error: Cannot connect to host localhost:3000 ssl:default [Multiple exceptions: [Errno 111] Connect call failed ('::1', 3000, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 3000)]",
        "\u26a0\ufe0f  Main API Health error: Cannot connect to host localhost:8000 ssl:default [Multiple exceptions: [Errno 111] Connect call failed ('::1', 8000, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 8000)]"
      ]
    },
    "hardcoded_secrets": {
      "passed": 0,
      "failed": 1,
      "messages": [
        "\u274c 104 potential hardcoded secrets found"
      ]
    },
    "ssl_config": {
      "passed": 1,
      "failed": 0,
      "messages": [
        "\u2705 SSL certificate configuration found"
      ]
    },
    "cors_config": {
      "passed": 1,
      "failed": 0,
      "messages": [
        "\u2705 CORS configured in 1 API files"
      ]
    },
    "response_time": {
      "passed": 0,
      "failed": 2,
      "messages": [
        "\u26a0\ufe0f  api unavailable: Cannot connect to host localhost:5000 ssl:default [Multiple exceptions: [Errno 111] Connect call failed ('::1', 5000, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 5000)]",
        "\u26a0\ufe0f  swarm unavailable: Cannot connect to host localhost:5001 ssl:default [Multiple exceptions: [Errno 111] Connect call failed ('::1', 5001, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 5001)]"
      ]
    },
    "resource_limits": {
      "passed": 1,
      "failed": 0,
      "messages": [
        "\u2705 Resource limits configured in 6 deployments"
      ]
    },
    "cost_estimate": {
      "passed": 1,
      "failed": 0,
      "messages": [
        "\u2705 Estimated 80% cost savings with CPU-only architecture"
      ]
    },
    "caching": {
      "passed": 1,
      "failed": 0,
      "messages": [
        "\u2705 Caching mechanisms detected"
      ]
    }
  },
  "recommendations": [
    "Start required services before deployment",
    "Review and secure API key management",
    "Configure SSL certificates for production"
  ],
  "launch_readiness": {
    "status": "MOSTLY_READY",
    "message": "System is mostly ready, address minor issues",
    "color": "\u001b[33m",
    "success_rate": 85.48387096774194
  }
}