{{/*
SOPHIA Intel API Deployment
*/}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sophia.fullname" . }}-api
  labels:
    {{- include "sophia.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  {{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sophia.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "sophia.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sophia.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.targetPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.api.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.api.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          env:
            # Environment variables from ConfigMap
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            # Secrets from Secret
            {{- range .Values.secrets.keys }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.secrets.name }}
                  key: {{ . }}
            {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-run
              mountPath: /var/run
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-run
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
{{/*
SOPHIA Intel Dashboard Deployment
*/}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sophia.fullname" . }}-dashboard
  labels:
    {{- include "sophia.labels" . | nindent 4 }}
    app.kubernetes.io/component: dashboard
spec:
  {{- if not .Values.dashboard.autoscaling.enabled }}
  replicas: {{ .Values.dashboard.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sophia.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: dashboard
  template:
    metadata:
      labels:
        {{- include "sophia.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: dashboard
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sophia.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: dashboard
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.dashboard.image.repository }}:{{ .Values.dashboard.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.dashboard.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.dashboard.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.dashboard.resources | nindent 12 }}
          env:
            - name: REACT_APP_API_URL
              value: "https://api.sophia-intel.ai"
            - name: REACT_APP_ENVIRONMENT
              value: {{ .Values.environment | quote }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{/*
MCP Services Deployments
*/}}
{{- range $service, $config := .Values.mcpServices }}
{{- if $config.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sophia.fullname" $ }}-mcp-{{ $service }}
  labels:
    {{- include "sophia.labels" $ | nindent 4 }}
    app.kubernetes.io/component: mcp-{{ $service }}
spec:
  replicas: {{ $config.replicaCount }}
  selector:
    matchLabels:
      {{- include "sophia.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: mcp-{{ $service }}
  template:
    metadata:
      labels:
        {{- include "sophia.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: mcp-{{ $service }}
    spec:
      {{- with $.Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sophia.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: mcp-{{ $service }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $config.image.repository }}:{{ $config.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $config.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $config.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml $config.resources | nindent 12 }}
          env:
            # Environment variables from ConfigMap
            {{- range $key, $value := $.Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            # Secrets from Secret
            {{- range $.Values.secrets.keys }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.secrets.name }}
                  key: {{ . }}
            {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}

