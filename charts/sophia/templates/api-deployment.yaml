apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.api.name }}
    component: api
    version: {{ .Values.api.image.tag | default "latest" }}
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.api.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.api.name }}
        component: api
    spec:
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      containers:
      - name: api
        image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.security.securityContext | nindent 10 }}
        ports:
        - name: http
          containerPort: {{ .Values.api.service.targetPort }}
          protocol: TCP
        env:
        # Non-secret environment variables
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        # Secret environment variables
        envFrom:
        - secretRef:
            name: {{ .Values.secretName }}
        # Health checks
        readinessProbe:
          httpGet:
            path: {{ .Values.api.probes.readiness.httpGet.path }}
            port: {{ .Values.api.probes.readiness.httpGet.port }}
          initialDelaySeconds: {{ .Values.api.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.api.probes.readiness.periodSeconds }}
        livenessProbe:
          httpGet:
            path: {{ .Values.api.probes.liveness.httpGet.path }}
            port: {{ .Values.api.probes.liveness.httpGet.port }}
          initialDelaySeconds: {{ .Values.api.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.api.probes.liveness.periodSeconds }}
        resources:
          {{- toYaml .Values.api.resources | nindent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.api.name }}-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.api.name }}
    component: api
spec:
  type: {{ .Values.api.service.type }}
  ports:
  - port: {{ .Values.api.service.port }}
    targetPort: {{ .Values.api.service.targetPort }}
    {{- if eq .Values.api.service.type "NodePort" }}
    nodePort: {{ .Values.api.service.nodePort }}
    {{- end }}
    protocol: TCP
    name: http
  selector:
    app: {{ .Values.api.name }}

